name: Python CI/CD

on:
  push:
    branches:
      - main # Запускати при push в гілку main
      - develop # Запускати при push в гілку develop (якщо ви її використовуєте)
  pull_request:
    branches:
      - main
      - develop

jobs:
  build-and-test:
    runs-on: ubuntu-latest # Використовуємо останню версію Ubuntu

    steps:
    - name: Checkout code
      uses: actions/checkout@v4 # Клонуємо репозиторій

    - name: Set up Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: '3.10' # Використовуємо Python 3.10, як вказано в pyproject.toml

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run pre-commit hooks (ruff, mypy, etc.)
      # Запускаємо всі pre-commit хуки.
      # Це гарантує, що ті ж самі перевірки, які виконуються локально,
      # будуть виконуватися і в CI.
      # Якщо будь-який хук знайде проблеми або внесе автоматичні виправлення,
      # цей крок завершиться з помилкою, і збірка не пройде.
      run: pre-commit run --all-files

    - name: Run Pytest with Coverage
      # Запускаємо pytest.
      # Конфігурація для pytest-cov (звіти в термінал та HTML)
      # вже вказана у pyproject.toml.
      # Якщо ви хочете, щоб збірка падала при низькому покритті,
      # додайте `--cov-fail-under=XX` до addopts у pyproject.toml.
      run: pytest

    # Якщо ви хочете завантажити HTML-звіт про покриття як артефакт:
    - name: Upload coverage report
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: htmlcov # Шлях до згенерованого HTML-звіту